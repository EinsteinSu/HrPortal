//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace HrPortal.ViewModels.WriteService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WriteService.IWriteService")]
    public interface IWriteService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWriteService/UpdateEnterpriseUser", ReplyAction="http://tempuri.org/IWriteService/UpdateEnterpriseUserResponse")]
        System.IAsyncResult BeginUpdateEnterpriseUser(string userJson, System.AsyncCallback callback, object asyncState);
        
        string EndUpdateEnterpriseUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWriteService/InsertRequirement", ReplyAction="http://tempuri.org/IWriteService/InsertRequirementResponse")]
        System.IAsyncResult BeginInsertRequirement(string requirement, System.AsyncCallback callback, object asyncState);
        
        string EndInsertRequirement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWriteService/UpdateRequirement", ReplyAction="http://tempuri.org/IWriteService/UpdateRequirementResponse")]
        System.IAsyncResult BeginUpdateRequirement(string requirement, string comment, System.AsyncCallback callback, object asyncState);
        
        string EndUpdateRequirement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWriteService/DeleteRequirement", ReplyAction="http://tempuri.org/IWriteService/DeleteRequirementResponse")]
        System.IAsyncResult BeginDeleteRequirement(string requirement, System.AsyncCallback callback, object asyncState);
        
        string EndDeleteRequirement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWriteService/PasswordChange", ReplyAction="http://tempuri.org/IWriteService/PasswordChangeResponse")]
        System.IAsyncResult BeginPasswordChange(string userID, string password, System.AsyncCallback callback, object asyncState);
        
        string EndPasswordChange(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWriteService/InsertComment", ReplyAction="http://tempuri.org/IWriteService/InsertCommentResponse")]
        System.IAsyncResult BeginInsertComment(string comment, int issueID, System.AsyncCallback callback, object asyncState);
        
        string EndInsertComment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWriteService/UpdateComment", ReplyAction="http://tempuri.org/IWriteService/UpdateCommentResponse")]
        System.IAsyncResult BeginUpdateComment(string comment, int issueID, System.AsyncCallback callback, object asyncState);
        
        string EndUpdateComment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWriteService/DeleteComment", ReplyAction="http://tempuri.org/IWriteService/DeleteCommentResponse")]
        System.IAsyncResult BeginDeleteComment(string comment, int issueID, System.AsyncCallback callback, object asyncState);
        
        string EndDeleteComment(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWriteServiceChannel : HrPortal.ViewModels.WriteService.IWriteService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateEnterpriseUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateEnterpriseUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertRequirementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertRequirementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateRequirementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateRequirementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteRequirementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteRequirementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PasswordChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PasswordChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WriteServiceClient : System.ServiceModel.ClientBase<HrPortal.ViewModels.WriteService.IWriteService>, HrPortal.ViewModels.WriteService.IWriteService {
        
        private BeginOperationDelegate onBeginUpdateEnterpriseUserDelegate;
        
        private EndOperationDelegate onEndUpdateEnterpriseUserDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateEnterpriseUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertRequirementDelegate;
        
        private EndOperationDelegate onEndInsertRequirementDelegate;
        
        private System.Threading.SendOrPostCallback onInsertRequirementCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateRequirementDelegate;
        
        private EndOperationDelegate onEndUpdateRequirementDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateRequirementCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteRequirementDelegate;
        
        private EndOperationDelegate onEndDeleteRequirementDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteRequirementCompletedDelegate;
        
        private BeginOperationDelegate onBeginPasswordChangeDelegate;
        
        private EndOperationDelegate onEndPasswordChangeDelegate;
        
        private System.Threading.SendOrPostCallback onPasswordChangeCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertCommentDelegate;
        
        private EndOperationDelegate onEndInsertCommentDelegate;
        
        private System.Threading.SendOrPostCallback onInsertCommentCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateCommentDelegate;
        
        private EndOperationDelegate onEndUpdateCommentDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateCommentCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteCommentDelegate;
        
        private EndOperationDelegate onEndDeleteCommentDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteCommentCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public WriteServiceClient() {
        }
        
        public WriteServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WriteServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WriteServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WriteServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<UpdateEnterpriseUserCompletedEventArgs> UpdateEnterpriseUserCompleted;
        
        public event System.EventHandler<InsertRequirementCompletedEventArgs> InsertRequirementCompleted;
        
        public event System.EventHandler<UpdateRequirementCompletedEventArgs> UpdateRequirementCompleted;
        
        public event System.EventHandler<DeleteRequirementCompletedEventArgs> DeleteRequirementCompleted;
        
        public event System.EventHandler<PasswordChangeCompletedEventArgs> PasswordChangeCompleted;
        
        public event System.EventHandler<InsertCommentCompletedEventArgs> InsertCommentCompleted;
        
        public event System.EventHandler<UpdateCommentCompletedEventArgs> UpdateCommentCompleted;
        
        public event System.EventHandler<DeleteCommentCompletedEventArgs> DeleteCommentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HrPortal.ViewModels.WriteService.IWriteService.BeginUpdateEnterpriseUser(string userJson, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateEnterpriseUser(userJson, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string HrPortal.ViewModels.WriteService.IWriteService.EndUpdateEnterpriseUser(System.IAsyncResult result) {
            return base.Channel.EndUpdateEnterpriseUser(result);
        }
        
        private System.IAsyncResult OnBeginUpdateEnterpriseUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userJson = ((string)(inValues[0]));
            return ((HrPortal.ViewModels.WriteService.IWriteService)(this)).BeginUpdateEnterpriseUser(userJson, callback, asyncState);
        }
        
        private object[] OnEndUpdateEnterpriseUser(System.IAsyncResult result) {
            string retVal = ((HrPortal.ViewModels.WriteService.IWriteService)(this)).EndUpdateEnterpriseUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateEnterpriseUserCompleted(object state) {
            if ((this.UpdateEnterpriseUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateEnterpriseUserCompleted(this, new UpdateEnterpriseUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateEnterpriseUserAsync(string userJson) {
            this.UpdateEnterpriseUserAsync(userJson, null);
        }
        
        public void UpdateEnterpriseUserAsync(string userJson, object userState) {
            if ((this.onBeginUpdateEnterpriseUserDelegate == null)) {
                this.onBeginUpdateEnterpriseUserDelegate = new BeginOperationDelegate(this.OnBeginUpdateEnterpriseUser);
            }
            if ((this.onEndUpdateEnterpriseUserDelegate == null)) {
                this.onEndUpdateEnterpriseUserDelegate = new EndOperationDelegate(this.OnEndUpdateEnterpriseUser);
            }
            if ((this.onUpdateEnterpriseUserCompletedDelegate == null)) {
                this.onUpdateEnterpriseUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateEnterpriseUserCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateEnterpriseUserDelegate, new object[] {
                        userJson}, this.onEndUpdateEnterpriseUserDelegate, this.onUpdateEnterpriseUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HrPortal.ViewModels.WriteService.IWriteService.BeginInsertRequirement(string requirement, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertRequirement(requirement, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string HrPortal.ViewModels.WriteService.IWriteService.EndInsertRequirement(System.IAsyncResult result) {
            return base.Channel.EndInsertRequirement(result);
        }
        
        private System.IAsyncResult OnBeginInsertRequirement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string requirement = ((string)(inValues[0]));
            return ((HrPortal.ViewModels.WriteService.IWriteService)(this)).BeginInsertRequirement(requirement, callback, asyncState);
        }
        
        private object[] OnEndInsertRequirement(System.IAsyncResult result) {
            string retVal = ((HrPortal.ViewModels.WriteService.IWriteService)(this)).EndInsertRequirement(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertRequirementCompleted(object state) {
            if ((this.InsertRequirementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertRequirementCompleted(this, new InsertRequirementCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertRequirementAsync(string requirement) {
            this.InsertRequirementAsync(requirement, null);
        }
        
        public void InsertRequirementAsync(string requirement, object userState) {
            if ((this.onBeginInsertRequirementDelegate == null)) {
                this.onBeginInsertRequirementDelegate = new BeginOperationDelegate(this.OnBeginInsertRequirement);
            }
            if ((this.onEndInsertRequirementDelegate == null)) {
                this.onEndInsertRequirementDelegate = new EndOperationDelegate(this.OnEndInsertRequirement);
            }
            if ((this.onInsertRequirementCompletedDelegate == null)) {
                this.onInsertRequirementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertRequirementCompleted);
            }
            base.InvokeAsync(this.onBeginInsertRequirementDelegate, new object[] {
                        requirement}, this.onEndInsertRequirementDelegate, this.onInsertRequirementCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HrPortal.ViewModels.WriteService.IWriteService.BeginUpdateRequirement(string requirement, string comment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateRequirement(requirement, comment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string HrPortal.ViewModels.WriteService.IWriteService.EndUpdateRequirement(System.IAsyncResult result) {
            return base.Channel.EndUpdateRequirement(result);
        }
        
        private System.IAsyncResult OnBeginUpdateRequirement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string requirement = ((string)(inValues[0]));
            string comment = ((string)(inValues[1]));
            return ((HrPortal.ViewModels.WriteService.IWriteService)(this)).BeginUpdateRequirement(requirement, comment, callback, asyncState);
        }
        
        private object[] OnEndUpdateRequirement(System.IAsyncResult result) {
            string retVal = ((HrPortal.ViewModels.WriteService.IWriteService)(this)).EndUpdateRequirement(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateRequirementCompleted(object state) {
            if ((this.UpdateRequirementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateRequirementCompleted(this, new UpdateRequirementCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateRequirementAsync(string requirement, string comment) {
            this.UpdateRequirementAsync(requirement, comment, null);
        }
        
        public void UpdateRequirementAsync(string requirement, string comment, object userState) {
            if ((this.onBeginUpdateRequirementDelegate == null)) {
                this.onBeginUpdateRequirementDelegate = new BeginOperationDelegate(this.OnBeginUpdateRequirement);
            }
            if ((this.onEndUpdateRequirementDelegate == null)) {
                this.onEndUpdateRequirementDelegate = new EndOperationDelegate(this.OnEndUpdateRequirement);
            }
            if ((this.onUpdateRequirementCompletedDelegate == null)) {
                this.onUpdateRequirementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateRequirementCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateRequirementDelegate, new object[] {
                        requirement,
                        comment}, this.onEndUpdateRequirementDelegate, this.onUpdateRequirementCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HrPortal.ViewModels.WriteService.IWriteService.BeginDeleteRequirement(string requirement, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteRequirement(requirement, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string HrPortal.ViewModels.WriteService.IWriteService.EndDeleteRequirement(System.IAsyncResult result) {
            return base.Channel.EndDeleteRequirement(result);
        }
        
        private System.IAsyncResult OnBeginDeleteRequirement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string requirement = ((string)(inValues[0]));
            return ((HrPortal.ViewModels.WriteService.IWriteService)(this)).BeginDeleteRequirement(requirement, callback, asyncState);
        }
        
        private object[] OnEndDeleteRequirement(System.IAsyncResult result) {
            string retVal = ((HrPortal.ViewModels.WriteService.IWriteService)(this)).EndDeleteRequirement(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteRequirementCompleted(object state) {
            if ((this.DeleteRequirementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteRequirementCompleted(this, new DeleteRequirementCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteRequirementAsync(string requirement) {
            this.DeleteRequirementAsync(requirement, null);
        }
        
        public void DeleteRequirementAsync(string requirement, object userState) {
            if ((this.onBeginDeleteRequirementDelegate == null)) {
                this.onBeginDeleteRequirementDelegate = new BeginOperationDelegate(this.OnBeginDeleteRequirement);
            }
            if ((this.onEndDeleteRequirementDelegate == null)) {
                this.onEndDeleteRequirementDelegate = new EndOperationDelegate(this.OnEndDeleteRequirement);
            }
            if ((this.onDeleteRequirementCompletedDelegate == null)) {
                this.onDeleteRequirementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteRequirementCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteRequirementDelegate, new object[] {
                        requirement}, this.onEndDeleteRequirementDelegate, this.onDeleteRequirementCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HrPortal.ViewModels.WriteService.IWriteService.BeginPasswordChange(string userID, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPasswordChange(userID, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string HrPortal.ViewModels.WriteService.IWriteService.EndPasswordChange(System.IAsyncResult result) {
            return base.Channel.EndPasswordChange(result);
        }
        
        private System.IAsyncResult OnBeginPasswordChange(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userID = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((HrPortal.ViewModels.WriteService.IWriteService)(this)).BeginPasswordChange(userID, password, callback, asyncState);
        }
        
        private object[] OnEndPasswordChange(System.IAsyncResult result) {
            string retVal = ((HrPortal.ViewModels.WriteService.IWriteService)(this)).EndPasswordChange(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPasswordChangeCompleted(object state) {
            if ((this.PasswordChangeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PasswordChangeCompleted(this, new PasswordChangeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PasswordChangeAsync(string userID, string password) {
            this.PasswordChangeAsync(userID, password, null);
        }
        
        public void PasswordChangeAsync(string userID, string password, object userState) {
            if ((this.onBeginPasswordChangeDelegate == null)) {
                this.onBeginPasswordChangeDelegate = new BeginOperationDelegate(this.OnBeginPasswordChange);
            }
            if ((this.onEndPasswordChangeDelegate == null)) {
                this.onEndPasswordChangeDelegate = new EndOperationDelegate(this.OnEndPasswordChange);
            }
            if ((this.onPasswordChangeCompletedDelegate == null)) {
                this.onPasswordChangeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPasswordChangeCompleted);
            }
            base.InvokeAsync(this.onBeginPasswordChangeDelegate, new object[] {
                        userID,
                        password}, this.onEndPasswordChangeDelegate, this.onPasswordChangeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HrPortal.ViewModels.WriteService.IWriteService.BeginInsertComment(string comment, int issueID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertComment(comment, issueID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string HrPortal.ViewModels.WriteService.IWriteService.EndInsertComment(System.IAsyncResult result) {
            return base.Channel.EndInsertComment(result);
        }
        
        private System.IAsyncResult OnBeginInsertComment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string comment = ((string)(inValues[0]));
            int issueID = ((int)(inValues[1]));
            return ((HrPortal.ViewModels.WriteService.IWriteService)(this)).BeginInsertComment(comment, issueID, callback, asyncState);
        }
        
        private object[] OnEndInsertComment(System.IAsyncResult result) {
            string retVal = ((HrPortal.ViewModels.WriteService.IWriteService)(this)).EndInsertComment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertCommentCompleted(object state) {
            if ((this.InsertCommentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertCommentCompleted(this, new InsertCommentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertCommentAsync(string comment, int issueID) {
            this.InsertCommentAsync(comment, issueID, null);
        }
        
        public void InsertCommentAsync(string comment, int issueID, object userState) {
            if ((this.onBeginInsertCommentDelegate == null)) {
                this.onBeginInsertCommentDelegate = new BeginOperationDelegate(this.OnBeginInsertComment);
            }
            if ((this.onEndInsertCommentDelegate == null)) {
                this.onEndInsertCommentDelegate = new EndOperationDelegate(this.OnEndInsertComment);
            }
            if ((this.onInsertCommentCompletedDelegate == null)) {
                this.onInsertCommentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertCommentCompleted);
            }
            base.InvokeAsync(this.onBeginInsertCommentDelegate, new object[] {
                        comment,
                        issueID}, this.onEndInsertCommentDelegate, this.onInsertCommentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HrPortal.ViewModels.WriteService.IWriteService.BeginUpdateComment(string comment, int issueID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateComment(comment, issueID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string HrPortal.ViewModels.WriteService.IWriteService.EndUpdateComment(System.IAsyncResult result) {
            return base.Channel.EndUpdateComment(result);
        }
        
        private System.IAsyncResult OnBeginUpdateComment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string comment = ((string)(inValues[0]));
            int issueID = ((int)(inValues[1]));
            return ((HrPortal.ViewModels.WriteService.IWriteService)(this)).BeginUpdateComment(comment, issueID, callback, asyncState);
        }
        
        private object[] OnEndUpdateComment(System.IAsyncResult result) {
            string retVal = ((HrPortal.ViewModels.WriteService.IWriteService)(this)).EndUpdateComment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateCommentCompleted(object state) {
            if ((this.UpdateCommentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateCommentCompleted(this, new UpdateCommentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateCommentAsync(string comment, int issueID) {
            this.UpdateCommentAsync(comment, issueID, null);
        }
        
        public void UpdateCommentAsync(string comment, int issueID, object userState) {
            if ((this.onBeginUpdateCommentDelegate == null)) {
                this.onBeginUpdateCommentDelegate = new BeginOperationDelegate(this.OnBeginUpdateComment);
            }
            if ((this.onEndUpdateCommentDelegate == null)) {
                this.onEndUpdateCommentDelegate = new EndOperationDelegate(this.OnEndUpdateComment);
            }
            if ((this.onUpdateCommentCompletedDelegate == null)) {
                this.onUpdateCommentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateCommentCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateCommentDelegate, new object[] {
                        comment,
                        issueID}, this.onEndUpdateCommentDelegate, this.onUpdateCommentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HrPortal.ViewModels.WriteService.IWriteService.BeginDeleteComment(string comment, int issueID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteComment(comment, issueID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string HrPortal.ViewModels.WriteService.IWriteService.EndDeleteComment(System.IAsyncResult result) {
            return base.Channel.EndDeleteComment(result);
        }
        
        private System.IAsyncResult OnBeginDeleteComment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string comment = ((string)(inValues[0]));
            int issueID = ((int)(inValues[1]));
            return ((HrPortal.ViewModels.WriteService.IWriteService)(this)).BeginDeleteComment(comment, issueID, callback, asyncState);
        }
        
        private object[] OnEndDeleteComment(System.IAsyncResult result) {
            string retVal = ((HrPortal.ViewModels.WriteService.IWriteService)(this)).EndDeleteComment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteCommentCompleted(object state) {
            if ((this.DeleteCommentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteCommentCompleted(this, new DeleteCommentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteCommentAsync(string comment, int issueID) {
            this.DeleteCommentAsync(comment, issueID, null);
        }
        
        public void DeleteCommentAsync(string comment, int issueID, object userState) {
            if ((this.onBeginDeleteCommentDelegate == null)) {
                this.onBeginDeleteCommentDelegate = new BeginOperationDelegate(this.OnBeginDeleteComment);
            }
            if ((this.onEndDeleteCommentDelegate == null)) {
                this.onEndDeleteCommentDelegate = new EndOperationDelegate(this.OnEndDeleteComment);
            }
            if ((this.onDeleteCommentCompletedDelegate == null)) {
                this.onDeleteCommentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCommentCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteCommentDelegate, new object[] {
                        comment,
                        issueID}, this.onEndDeleteCommentDelegate, this.onDeleteCommentCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override HrPortal.ViewModels.WriteService.IWriteService CreateChannel() {
            return new WriteServiceClientChannel(this);
        }
        
        private class WriteServiceClientChannel : ChannelBase<HrPortal.ViewModels.WriteService.IWriteService>, HrPortal.ViewModels.WriteService.IWriteService {
            
            public WriteServiceClientChannel(System.ServiceModel.ClientBase<HrPortal.ViewModels.WriteService.IWriteService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginUpdateEnterpriseUser(string userJson, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userJson;
                System.IAsyncResult _result = base.BeginInvoke("UpdateEnterpriseUser", _args, callback, asyncState);
                return _result;
            }
            
            public string EndUpdateEnterpriseUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("UpdateEnterpriseUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertRequirement(string requirement, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = requirement;
                System.IAsyncResult _result = base.BeginInvoke("InsertRequirement", _args, callback, asyncState);
                return _result;
            }
            
            public string EndInsertRequirement(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("InsertRequirement", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateRequirement(string requirement, string comment, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = requirement;
                _args[1] = comment;
                System.IAsyncResult _result = base.BeginInvoke("UpdateRequirement", _args, callback, asyncState);
                return _result;
            }
            
            public string EndUpdateRequirement(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("UpdateRequirement", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteRequirement(string requirement, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = requirement;
                System.IAsyncResult _result = base.BeginInvoke("DeleteRequirement", _args, callback, asyncState);
                return _result;
            }
            
            public string EndDeleteRequirement(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("DeleteRequirement", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPasswordChange(string userID, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userID;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("PasswordChange", _args, callback, asyncState);
                return _result;
            }
            
            public string EndPasswordChange(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("PasswordChange", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertComment(string comment, int issueID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = comment;
                _args[1] = issueID;
                System.IAsyncResult _result = base.BeginInvoke("InsertComment", _args, callback, asyncState);
                return _result;
            }
            
            public string EndInsertComment(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("InsertComment", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateComment(string comment, int issueID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = comment;
                _args[1] = issueID;
                System.IAsyncResult _result = base.BeginInvoke("UpdateComment", _args, callback, asyncState);
                return _result;
            }
            
            public string EndUpdateComment(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("UpdateComment", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteComment(string comment, int issueID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = comment;
                _args[1] = issueID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteComment", _args, callback, asyncState);
                return _result;
            }
            
            public string EndDeleteComment(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("DeleteComment", _args, result)));
                return _result;
            }
        }
    }
}
