//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace HrPortal.ViewModels.ReadService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReadService.IReadService")]
    public interface IReadService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IReadService/GetRequirements", ReplyAction="http://tempuri.org/IReadService/GetRequirementsResponse")]
        System.IAsyncResult BeginGetRequirements(int status, System.AsyncCallback callback, object asyncState);
        
        string EndGetRequirements(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IReadService/Login", ReplyAction="http://tempuri.org/IReadService/LoginResponse")]
        System.IAsyncResult BeginLogin(string userName, string password, System.AsyncCallback callback, object asyncState);
        
        string EndLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IReadService/GetDownloads", ReplyAction="http://tempuri.org/IReadService/GetDownloadsResponse")]
        System.IAsyncResult BeginGetDownloads(System.AsyncCallback callback, object asyncState);
        
        string EndGetDownloads(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReadServiceChannel : HrPortal.ViewModels.ReadService.IReadService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRequirementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRequirementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDownloadsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDownloadsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReadServiceClient : System.ServiceModel.ClientBase<HrPortal.ViewModels.ReadService.IReadService>, HrPortal.ViewModels.ReadService.IReadService {
        
        private BeginOperationDelegate onBeginGetRequirementsDelegate;
        
        private EndOperationDelegate onEndGetRequirementsDelegate;
        
        private System.Threading.SendOrPostCallback onGetRequirementsCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDownloadsDelegate;
        
        private EndOperationDelegate onEndGetDownloadsDelegate;
        
        private System.Threading.SendOrPostCallback onGetDownloadsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ReadServiceClient() {
        }
        
        public ReadServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReadServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReadServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReadServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetRequirementsCompletedEventArgs> GetRequirementsCompleted;
        
        public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<GetDownloadsCompletedEventArgs> GetDownloadsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HrPortal.ViewModels.ReadService.IReadService.BeginGetRequirements(int status, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRequirements(status, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string HrPortal.ViewModels.ReadService.IReadService.EndGetRequirements(System.IAsyncResult result) {
            return base.Channel.EndGetRequirements(result);
        }
        
        private System.IAsyncResult OnBeginGetRequirements(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int status = ((int)(inValues[0]));
            return ((HrPortal.ViewModels.ReadService.IReadService)(this)).BeginGetRequirements(status, callback, asyncState);
        }
        
        private object[] OnEndGetRequirements(System.IAsyncResult result) {
            string retVal = ((HrPortal.ViewModels.ReadService.IReadService)(this)).EndGetRequirements(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRequirementsCompleted(object state) {
            if ((this.GetRequirementsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRequirementsCompleted(this, new GetRequirementsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRequirementsAsync(int status) {
            this.GetRequirementsAsync(status, null);
        }
        
        public void GetRequirementsAsync(int status, object userState) {
            if ((this.onBeginGetRequirementsDelegate == null)) {
                this.onBeginGetRequirementsDelegate = new BeginOperationDelegate(this.OnBeginGetRequirements);
            }
            if ((this.onEndGetRequirementsDelegate == null)) {
                this.onEndGetRequirementsDelegate = new EndOperationDelegate(this.OnEndGetRequirements);
            }
            if ((this.onGetRequirementsCompletedDelegate == null)) {
                this.onGetRequirementsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRequirementsCompleted);
            }
            base.InvokeAsync(this.onBeginGetRequirementsDelegate, new object[] {
                        status}, this.onEndGetRequirementsDelegate, this.onGetRequirementsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HrPortal.ViewModels.ReadService.IReadService.BeginLogin(string userName, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(userName, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string HrPortal.ViewModels.ReadService.IReadService.EndLogin(System.IAsyncResult result) {
            return base.Channel.EndLogin(result);
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((HrPortal.ViewModels.ReadService.IReadService)(this)).BeginLogin(userName, password, callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            string retVal = ((HrPortal.ViewModels.ReadService.IReadService)(this)).EndLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync(string userName, string password) {
            this.LoginAsync(userName, password, null);
        }
        
        public void LoginAsync(string userName, string password, object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                        userName,
                        password}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult HrPortal.ViewModels.ReadService.IReadService.BeginGetDownloads(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDownloads(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string HrPortal.ViewModels.ReadService.IReadService.EndGetDownloads(System.IAsyncResult result) {
            return base.Channel.EndGetDownloads(result);
        }
        
        private System.IAsyncResult OnBeginGetDownloads(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((HrPortal.ViewModels.ReadService.IReadService)(this)).BeginGetDownloads(callback, asyncState);
        }
        
        private object[] OnEndGetDownloads(System.IAsyncResult result) {
            string retVal = ((HrPortal.ViewModels.ReadService.IReadService)(this)).EndGetDownloads(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDownloadsCompleted(object state) {
            if ((this.GetDownloadsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDownloadsCompleted(this, new GetDownloadsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDownloadsAsync() {
            this.GetDownloadsAsync(null);
        }
        
        public void GetDownloadsAsync(object userState) {
            if ((this.onBeginGetDownloadsDelegate == null)) {
                this.onBeginGetDownloadsDelegate = new BeginOperationDelegate(this.OnBeginGetDownloads);
            }
            if ((this.onEndGetDownloadsDelegate == null)) {
                this.onEndGetDownloadsDelegate = new EndOperationDelegate(this.OnEndGetDownloads);
            }
            if ((this.onGetDownloadsCompletedDelegate == null)) {
                this.onGetDownloadsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDownloadsCompleted);
            }
            base.InvokeAsync(this.onBeginGetDownloadsDelegate, null, this.onEndGetDownloadsDelegate, this.onGetDownloadsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override HrPortal.ViewModels.ReadService.IReadService CreateChannel() {
            return new ReadServiceClientChannel(this);
        }
        
        private class ReadServiceClientChannel : ChannelBase<HrPortal.ViewModels.ReadService.IReadService>, HrPortal.ViewModels.ReadService.IReadService {
            
            public ReadServiceClientChannel(System.ServiceModel.ClientBase<HrPortal.ViewModels.ReadService.IReadService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetRequirements(int status, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = status;
                System.IAsyncResult _result = base.BeginInvoke("GetRequirements", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetRequirements(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetRequirements", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLogin(string userName, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userName;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("Login", _args, callback, asyncState);
                return _result;
            }
            
            public string EndLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Login", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDownloads(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetDownloads", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetDownloads(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetDownloads", _args, result)));
                return _result;
            }
        }
    }
}
